<?php
/**
 * @file
 * Code for the Stanford Program/Service feature.
 */

include_once 'stanford_program_service.features.inc';

/**
 * Implements hook_preprocess().
 */
function stanford_program_service_preprocess_node(&$vars) {
  if ($vars["type"] == "stanford_program_service") {
    // add display mode machine-name
    $vars['classes_array'][] = drupal_clean_css_identifier($vars['field_s_landing_page_layout'][LANGUAGE_NONE][0]['value']);
  }

  // $vars['content']['field_program_service_item']['#attributes']['class'] = array("row");
}

/**
 * Implements hook_entity_info_alter().
 */
function stanford_program_service_entity_info_alter(&$entity_info) {
  // Override the entity class to allow different view modes per field
  // collection item.
  $entity_info['field_collection_item']['entity class'] = 'FieldCollectionViewMode';
  $entity_info['field_collection_item']['view modes'] += variable_get('field_collection_view_modes', array());
}

/**
 * [stanford_program_service_preprocess_field description]
 * @param  [type] $vars [description]
 * @return [type]       [description]
 */
function stanford_program_service_preprocess_field(&$vars) {
  if ($vars['element']['#field_name'] == "field_landing_page_item") {
    if (isset($vars['#object'])) {
      $view_mode = $vars['#object']['field_s_landing_page_layout'][LANGUAGE_NONE][0]['value'];
      $vars['classes_array'][] = drupal_clean_css_identifier($view_mode . "-view-mode");
    }
  }
}

/**
 * Entity class for field collection items.
 *
 * If we are a landing page content type parent and on the node_view page
 * we want to tweak the layout to match.
 *
 */
if (!class_exists("FieldCollectionViewMode")) {
  class FieldCollectionViewMode extends FieldCollectionItemEntity {
    public function view($view_mode = 'full', $langcode = NULL, $page = NULL) {

      if($this->field_name == "field_landing_page_item") {
        $arg0 = arg(0);
        $arg1 = arg(1);

        if($arg0 == "node" && is_numeric($arg1)) {
          $node = node_load($arg1);
          $view_mode = $node->field_s_landing_page_layout[LANGUAGE_NONE][0]['value'];
        }
      }

      return parent::view($view_mode, $langcode, $page);
    }
  }
}
